service: sls
frameworkVersion: "3"

#Environment Variables
custom:
  settings:
    USER_TABLE: Users
    DEVOTION_TABLE: Devotions
    USER_COGNITO_POOL_ID: ap-southeast-1_zxe8EwWvX
    USER_COGNITO_CLIENT_ID: escen3rb67bte7o9a1935sdru
    REGION: ap-southeast-1
    ACCOUNT_ID: 277650467882

provider:
  name: aws
  runtime: nodejs16.x
  environment: ${self:custom.settings}
  region: ap-southeast-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.USER_TABLE}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.DEVOTION_TABLE}"
    - Effect: "Allow"
      Action:
        - "cognito-idp:AdminInitiateAuth"
      Resource:
        - "arn:aws:cognito-idp:ap-southeast-1:277650467882:userpool/${self:custom.settings.USER_COGNITO_POOL_ID}"

plugins:
  - serverless-webpack

package:
  individually: true

resources:
  Resources:
    ApiGatewayAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: AuthorizerUsers
        Type: COGNITO_USER_POOLS
        IdentitySource: method.request.header.Authorization
        RestApiId:
          Ref: ApiGatewayRestApi
        ProviderARNs:
          - arn:aws:cognito-idp:${self:custom.settings.REGION}:${self:custom.settings.ACCOUNT_ID}:userpool/${self:custom.settings.USER_COGNITO_POOL_ID}
    #DO NOT DELETE DATABASE WILL BE DELETED ONCE PUSH
    Users:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.USER_TABLE}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
    Devotions:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.DEVOTION_TABLE}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
#API Gateway Config
functions:
  - ${file(src/functions/User/user.yaml)}
  - ${file(src/functions/Write/write.yaml)}
  - ${file(src/functions/Login/login.yaml)}
